#ifndef SIREUM_H_hamr_Arch
#define SIREUM_H_hamr_Arch
#include <types.h>

void hamr_Arch_init(STACK_FRAME_ONLY);

hamr_Drivers_UARTDriver_Impl_Bridge hamr_Arch_SW_Impl_Instance_FC_UART_UARTDriver(STACK_FRAME_ONLY);
hamr_SW_RadioDriver_Attestation_thr_Impl_Bridge hamr_Arch_SW_Impl_Instance_RADIO_RadioDriver_Attestation(STACK_FRAME_ONLY);
hamr_SW_FlyZonesDatabase_thr_Impl_Bridge hamr_Arch_SW_Impl_Instance_FlyZones_FlyZonesDatabase(STACK_FRAME_ONLY);
hamr_SW_UxAS_thr_Impl_Bridge hamr_Arch_SW_Impl_Instance_UXAS_UxAS(STACK_FRAME_ONLY);
hamr_SW_WaypointPlanManagerService_thr_Impl_Bridge hamr_Arch_SW_Impl_Instance_WPM_WaypointPlanManagerService(STACK_FRAME_ONLY);
hamr_SW_CASE_AttestationManager_thr_Impl_Bridge hamr_Arch_SW_Impl_Instance_AM_CASE_AttestationManager(STACK_FRAME_ONLY);
hamr_SW_CASE_AttestationGate_thr_Impl_Bridge hamr_Arch_SW_Impl_Instance_AM_Gate_CASE_AttestationGate(STACK_FRAME_ONLY);
hamr_SW_CASE_Filter_AReq_thr_Impl_Bridge hamr_Arch_SW_Impl_Instance_FLT_AReq_CASE_Filter_AReq(STACK_FRAME_ONLY);
hamr_SW_CASE_Filter_OR_thr_Impl_Bridge hamr_Arch_SW_Impl_Instance_FLT_OR_CASE_Filter_OR(STACK_FRAME_ONLY);
hamr_SW_CASE_Filter_LST_thr_Impl_Bridge hamr_Arch_SW_Impl_Instance_FLT_LST_CASE_Filter_LST(STACK_FRAME_ONLY);
hamr_SW_CASE_Monitor_Req_thr_Impl_Bridge hamr_Arch_SW_Impl_Instance_MON_REQ_CASE_Monitor_Req(STACK_FRAME_ONLY);
hamr_SW_CASE_Filter_ARes_thr_Impl_Bridge hamr_Arch_SW_Impl_Instance_FLT_ARes_CASE_Filter_ARes(STACK_FRAME_ONLY);
hamr_SW_CASE_Monitor_Geo_thr_Impl_Bridge hamr_Arch_SW_Impl_Instance_MON_GEO_CASE_Monitor_Geo(STACK_FRAME_ONLY);
art_ArchitectureDescription hamr_Arch_ad(STACK_FRAME_ONLY);

#endif