#ifndef SIREUM_H_hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App
#define SIREUM_H_hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App
#include <types.h>

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App_init(STACK_FRAME_ONLY);

art_Bridge_EntryPoints hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App_entryPoints(STACK_FRAME_ONLY);
Z hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App_appPortId(STACK_FRAME_ONLY);
Option_882048 hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App_appPortIdOpt(STACK_FRAME_ONLY);
Z hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App_trusted_idsPortId(STACK_FRAME_ONLY);
Option_882048 hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App_trusted_idsPortIdOpt(STACK_FRAME_ONLY);
Z hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App_AutomationRequest_inPortId(STACK_FRAME_ONLY);
Option_882048 hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App_AutomationRequest_inPortIdOpt(STACK_FRAME_ONLY);
Z hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App_OperatingRegion_inPortId(STACK_FRAME_ONLY);
Option_882048 hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App_OperatingRegion_inPortIdOpt(STACK_FRAME_ONLY);
Z hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App_LineSearchTask_inPortId(STACK_FRAME_ONLY);
Option_882048 hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App_LineSearchTask_inPortIdOpt(STACK_FRAME_ONLY);

Z hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App_main(STACK_FRAME IS_948B60 args);

Unit hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App_atExit(STACK_FRAME_ONLY);

Unit hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App_initialiseArchitecture(STACK_FRAME Z seed);

Unit hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App_initialise(STACK_FRAME_ONLY);

Unit hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App_compute(STACK_FRAME_ONLY);

Unit hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App_exit(STACK_FRAME_ONLY);

Unit hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_App_finalise(STACK_FRAME_ONLY);

#endif