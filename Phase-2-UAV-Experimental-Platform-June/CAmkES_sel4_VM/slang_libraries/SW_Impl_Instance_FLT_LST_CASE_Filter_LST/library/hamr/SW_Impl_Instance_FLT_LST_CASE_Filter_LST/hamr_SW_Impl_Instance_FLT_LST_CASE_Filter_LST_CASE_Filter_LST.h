#ifndef SIREUM_H_hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST
#define SIREUM_H_hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST

#ifdef __cplusplus
extern "C" {
#endif

#include <types.h>

void hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_init(STACK_FRAME_ONLY);

hamr_SW_CASE_Filter_LST_thr_Impl_Bridge hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_CASE_Filter_LSTBridge(STACK_FRAME_ONLY);
art_Bridge_EntryPoints hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_entryPoints(STACK_FRAME_ONLY);
Option_8E9F45 hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_noData(STACK_FRAME_ONLY);
Z hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_filter_in_id(STACK_FRAME_ONLY);
Option_8E9F45 hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_filter_in_port(STACK_FRAME_ONLY);
void hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_filter_in_port_a(STACK_FRAME Option_8E9F45 p_filter_in_port);
Z hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_filter_out_id(STACK_FRAME_ONLY);
Option_8E9F45 hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_filter_out_port(STACK_FRAME_ONLY);
void hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_filter_out_port_a(STACK_FRAME Option_8E9F45 p_filter_out_port);

Unit hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_main_printDataContent(STACK_FRAME art_DataContent a);

Z hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_main(STACK_FRAME IS_948B60 args);

Unit hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_initialiseArchitecture(STACK_FRAME_ONLY);

Unit hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_initialiseEntryPoint(STACK_FRAME_ONLY);

Unit hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_computeEntryPoint(STACK_FRAME_ONLY);

Unit hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_finaliseEntryPoint(STACK_FRAME_ONLY);

Unit hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_run(STACK_FRAME_ONLY);

Unit hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_logInfo(STACK_FRAME String title, String msg);

Unit hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_sendOutput(STACK_FRAME IS_82ABD8 eventPortIds, IS_82ABD8 dataPortIds);

Unit hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_receiveInput(STACK_FRAME IS_82ABD8 eventPortIds, IS_82ABD8 dataPortIds);

Unit hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_logDebug(STACK_FRAME String title, String msg);

Unit hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_logError(STACK_FRAME String title, String msg);

void hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_getValue(STACK_FRAME Option_8E9F45 result, Z portId);

Unit hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_putValue(STACK_FRAME Z portId, art_DataContent data);

void hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_init_CASE_Filter_LSTBridge(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_init_entryPoints(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_init_noData(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_init_filter_in_id(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_init_filter_in_port(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_init_filter_out_id(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_FLT_LST_CASE_Filter_LST_CASE_Filter_LST_init_filter_out_port(STACK_FRAME_ONLY);

#ifdef __cplusplus
}
#endif

#endif