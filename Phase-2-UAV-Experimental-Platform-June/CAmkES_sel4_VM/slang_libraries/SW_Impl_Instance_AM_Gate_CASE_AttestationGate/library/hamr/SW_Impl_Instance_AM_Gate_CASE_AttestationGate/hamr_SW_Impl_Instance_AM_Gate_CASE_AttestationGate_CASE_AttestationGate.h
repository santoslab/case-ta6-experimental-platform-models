#ifndef SIREUM_H_hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate
#define SIREUM_H_hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate

#ifdef __cplusplus
extern "C" {
#endif

#include <types.h>

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init(STACK_FRAME_ONLY);

hamr_SW_CASE_AttestationGate_thr_Impl_Bridge hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_CASE_AttestationGateBridge(STACK_FRAME_ONLY);
art_Bridge_EntryPoints hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_entryPoints(STACK_FRAME_ONLY);
Option_8E9F45 hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_noData(STACK_FRAME_ONLY);
Z hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_trusted_ids_id(STACK_FRAME_ONLY);
Option_8E9F45 hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_trusted_ids_port(STACK_FRAME_ONLY);
void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_trusted_ids_port_a(STACK_FRAME Option_8E9F45 p_trusted_ids_port);
Z hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_AutomationRequest_in_id(STACK_FRAME_ONLY);
Option_8E9F45 hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_AutomationRequest_in_port(STACK_FRAME_ONLY);
void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_AutomationRequest_in_port_a(STACK_FRAME Option_8E9F45 p_AutomationRequest_in_port);
Z hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_AutomationRequest_UXAS_id(STACK_FRAME_ONLY);
Option_8E9F45 hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_AutomationRequest_UXAS_port(STACK_FRAME_ONLY);
void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_AutomationRequest_UXAS_port_a(STACK_FRAME Option_8E9F45 p_AutomationRequest_UXAS_port);
Z hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_AutomationRequest_MON_REQ_id(STACK_FRAME_ONLY);
Option_8E9F45 hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_AutomationRequest_MON_REQ_port(STACK_FRAME_ONLY);
void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_AutomationRequest_MON_REQ_port_a(STACK_FRAME Option_8E9F45 p_AutomationRequest_MON_REQ_port);
Z hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_OperatingRegion_in_id(STACK_FRAME_ONLY);
Option_8E9F45 hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_OperatingRegion_in_port(STACK_FRAME_ONLY);
void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_OperatingRegion_in_port_a(STACK_FRAME Option_8E9F45 p_OperatingRegion_in_port);
Z hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_OperatingRegion_out_id(STACK_FRAME_ONLY);
Option_8E9F45 hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_OperatingRegion_out_port(STACK_FRAME_ONLY);
void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_OperatingRegion_out_port_a(STACK_FRAME Option_8E9F45 p_OperatingRegion_out_port);
Z hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_LineSearchTask_in_id(STACK_FRAME_ONLY);
Option_8E9F45 hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_LineSearchTask_in_port(STACK_FRAME_ONLY);
void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_LineSearchTask_in_port_a(STACK_FRAME Option_8E9F45 p_LineSearchTask_in_port);
Z hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_LineSearchTask_out_id(STACK_FRAME_ONLY);
Option_8E9F45 hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_LineSearchTask_out_port(STACK_FRAME_ONLY);
void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_LineSearchTask_out_port_a(STACK_FRAME Option_8E9F45 p_LineSearchTask_out_port);

Unit hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_main_printDataContent(STACK_FRAME art_DataContent a);

Z hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_main(STACK_FRAME IS_948B60 args);

Unit hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_initialiseArchitecture(STACK_FRAME_ONLY);

Unit hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_initialiseEntryPoint(STACK_FRAME_ONLY);

Unit hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_computeEntryPoint(STACK_FRAME_ONLY);

Unit hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_finaliseEntryPoint(STACK_FRAME_ONLY);

Unit hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_run(STACK_FRAME_ONLY);

Unit hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_logInfo(STACK_FRAME String title, String msg);

Unit hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_sendOutput(STACK_FRAME IS_82ABD8 eventPortIds, IS_82ABD8 dataPortIds);

Unit hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_receiveInput(STACK_FRAME IS_82ABD8 eventPortIds, IS_82ABD8 dataPortIds);

Unit hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_logDebug(STACK_FRAME String title, String msg);

Unit hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_logError(STACK_FRAME String title, String msg);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_getValue(STACK_FRAME Option_8E9F45 result, Z portId);

Unit hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_putValue(STACK_FRAME Z portId, art_DataContent data);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init_CASE_AttestationGateBridge(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init_entryPoints(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init_noData(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init_trusted_ids_id(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init_trusted_ids_port(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init_AutomationRequest_in_id(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init_AutomationRequest_in_port(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init_AutomationRequest_UXAS_id(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init_AutomationRequest_UXAS_port(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init_AutomationRequest_MON_REQ_id(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init_AutomationRequest_MON_REQ_port(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init_OperatingRegion_in_id(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init_OperatingRegion_in_port(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init_OperatingRegion_out_id(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init_OperatingRegion_out_port(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init_LineSearchTask_in_id(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init_LineSearchTask_in_port(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init_LineSearchTask_out_id(STACK_FRAME_ONLY);

void hamr_SW_Impl_Instance_AM_Gate_CASE_AttestationGate_CASE_AttestationGate_init_LineSearchTask_out_port(STACK_FRAME_ONLY);

#ifdef __cplusplus
}
#endif

#endif